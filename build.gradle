buildscript {
	dependencies {
		classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.17.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "com.commercehub.gradle.plugin.avro" version "0.9.1"
}

group = 'br.com.invillia.lyon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "http://packages.confluent.io/maven/" }
}

ext {
	set('springCloudVersion', "Hoxton.SR8")
}

compileTestJava.options.encoding = 'UTF-8'
compileJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'

	compile group: 'org.springframework.batch', name: 'spring-batch-core', version: '4.3.0'

	implementation "org.apache.avro:avro:1.9.1"
	implementation("io.confluent:kafka-avro-serializer:5.2.2") {
		exclude group: "log4j"
		exclude group: "org.slf4j"
	}

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation "com.github.tomakehurst:wiremock:2.19.0"
	testImplementation "com.github.javafaker:javafaker:1.0.1"
	testImplementation('org.springframework.cloud:spring-cloud-stream-test-support'){
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}

	testImplementation('org.springframework.boot:spring-boot-starter-test'){
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

avro {
	stringType = "String"
	createSetters = false
	enableDecimalLogicalType = true
	fieldVisibility = "private"
}

sourceSets {
	main {
		java {
			srcDir file("$buildDir/generated-main-avro-java")
		}
	}
}

test {
	useJUnitPlatform()
}
